name: CI/CD

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2

    - name: Set up JDK 18
      uses: actions/setup-java@v2
      with:
        java-version: 18
        distribution: 'adopt'

    - name: Cache Maven packages
      uses: actions/cache@v2
      with:
        path: ~/.m2
        key: ${{ runner.os }}-m2-${{ hashFiles('**/pom.xml') }}
        restore-keys: ${{ runner.os }}-m2

    - name: Build and test with Maven
      run: mvn --batch-mode --update-snapshots --no-transfer-progress clean package

    - name: Upload JAR file
      uses: actions/upload-artifact@v2
      with:
        name: app-jar
        path: target/*.jar

    - name: Consolidated Build with Maven Wrapper
      run: ./mvnw -B package

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment: production

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up JDK 17
        uses: actions/setup-java@v2
        with:
          java-version: 17
          distribution: 'adopt'

      - name: Download JAR file
        uses: actions/download-artifact@v2
        with:
          name: app-jar
          path: target

      

      - name: Install and configure AWS CLI
        run: |
          curl "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip" -o "awscliv2.zip"
          unzip -q awscliv2.zip
          sudo ./aws/install --update
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-2

      - name: Login to ECR
        run: |
          aws ecr get-login-password --region us-east-2 | docker login --username AWS --password-stdin 440205455740.dkr.ecr.us-east-2.amazonaws.com

      - name: Build Docker image
        run: docker build -t aws_replatform_ecr .

      - name: Tag and push Docker image
        run: |
          docker tag aws_replatform_ecr:latest 440205455740.dkr.ecr.us-east-2.amazonaws.com/aws_replatform_ecr:latest
          docker push 440205455740.dkr.ecr.us-east-2.amazonaws.com/aws_replatform_ecr:latest

      - name: Pull Docker image from ECR
        run: |
          docker pull 440205455740.dkr.ecr.us-east-2.amazonaws.com/aws_replatform_ecr:latest     

      - name: Deploy to EKS
        run: |
          # Update kubeconfig for Amazon EKS
          aws eks update-kubeconfig --name test_k8s --region us-east-2

          # Confirm if the nodes are accessible
          kubectl get nodes

          # Check the content of the kubeconfig file
          ls -a ~/.kube/config

          # List the available contexts in the kubeconfig
          kubectl config get-contexts

          # Set the context to the recently added EKS cluster context (Replace <context_name> with the actual context name)
          kubectl config use-context latest

          # Run the image update for the deployment (Replace <deployment_name> with the actual deployment name)
          kubectl set image deployment/spring-petclinic spring-petclinic=440205455740.dkr.ecr.us-east-2.amazonaws.com/aws_replatform_ecr:latest

